.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Basics_plot_covariance_and_marker.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_Basics_plot_covariance_and_marker.py:


===============================
Covariance, Fisher and Markers!
===============================

Sometimes you want to compare your data to a Fisher matrix projection,
or you just have some Gaussian you want also drawn.

Or maybe its just a random point you want to put on the plot.

It's all easy to do.



.. image:: /examples/Basics/images/sphx_glr_plot_covariance_and_marker_001.png
    :alt: plot covariance and marker
    :class: sphx-glr-single-img






.. code-block:: default

    # -*- coding: utf-8 -*-
    from chainconsumer import ChainConsumer

    mean = [1, 5]
    cov = [[1, 1], [1, 3]]
    parameters = ["a", "b"]

    c = ChainConsumer()
    c.add_covariance(mean, cov, parameters=parameters, name="Cov")
    c.add_marker(mean, parameters=parameters, name="Marker!", marker_style="*", marker_size=100, color="r")
    c.configure(usetex=False, serif=False)
    fig = c.plotter.plot()

    fig.set_size_inches(3 + fig.get_size_inches())  # Resize fig for doco. You don't need this.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.812 seconds)


.. _sphx_glr_download_examples_Basics_plot_covariance_and_marker.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_covariance_and_marker.py <plot_covariance_and_marker.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_covariance_and_marker.ipynb <plot_covariance_and_marker.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
