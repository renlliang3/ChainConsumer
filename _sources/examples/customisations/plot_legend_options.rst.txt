.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_customisations_plot_legend_options.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_customisations_plot_legend_options.py:


==============
Legend Options
==============

Legends are hard.

Because of that, you can pass any keywords to the legend call you want via `legend_kwargs`.


.. code-block:: default


    import numpy as np
    from numpy.random import multivariate_normal
    from chainconsumer import ChainConsumer

    np.random.seed(0)
    data1 = multivariate_normal([0, 0], [[1, 0], [0, 1]], size=1000000)
    data2 = data1 + 2

    c = ChainConsumer()
    c.add_chain(data1, parameters=["$x$", "$y$"], name="Chain 1")
    c.add_chain(data2, parameters=["$x$", "$y$"], name="Chain 2")
    c.configure(colors=['lb', 'g'])
    fig = c.plotter.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/customisations/images/sphx_glr_plot_legend_options_001.png
    :alt: plot legend options
    :class: sphx-glr-single-img





If the linestyles are different and the colours are the same, the artists
will reappear.


.. code-block:: default


    c = ChainConsumer()
    c.add_chain(data1, parameters=["$x$", "$y$"], name="Chain 1")
    c.add_chain(data2, parameters=["$x$", "$y$"], name="Chain 2")
    c.configure(colors=['lb', 'lb'], linestyles=["-", "--"])
    fig = c.plotter.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/customisations/images/sphx_glr_plot_legend_options_002.png
    :alt: plot legend options
    :class: sphx-glr-single-img





You might also want to relocate the legend to another subplot if your
contours don't have enough space for the legend!


.. code-block:: default


    c = ChainConsumer()
    c.add_chain(data1, parameters=["$x$", "$y$"], name="Chain 1")
    c.add_chain(data2, parameters=["$x$", "$y$"], name="Chain 2")
    c.configure(linestyles=["-", "--"], sigmas=[0, 1, 2, 3],
                legend_kwargs={"loc": "upper left", "fontsize": 10},
                legend_color_text=False, legend_location=(0, 0))
    fig = c.plotter.plot(figsize=1.5)
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.



.. image:: /examples/customisations/images/sphx_glr_plot_legend_options_003.png
    :alt: plot legend options
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.264 seconds)


.. _sphx_glr_download_examples_customisations_plot_legend_options.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_legend_options.py <plot_legend_options.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_legend_options.ipynb <plot_legend_options.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
