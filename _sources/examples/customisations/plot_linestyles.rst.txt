.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_customisations_plot_linestyles.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_customisations_plot_linestyles.py:


===================
Changing Linestyles
===================

Customise the plot line styles.

In this example we customise the line styles used, and make use of
the ability to pass lists of parameters to the configuration methods.



.. image:: /examples/customisations/images/sphx_glr_plot_linestyles_001.png
    :alt: plot linestyles
    :class: sphx-glr-single-img






.. code-block:: default


    import numpy as np
    from numpy.random import normal, multivariate_normal
    from chainconsumer import ChainConsumer

    np.random.seed(1)
    cov = normal(size=(3, 3))
    data = multivariate_normal(normal(size=3), np.dot(cov, cov.T), size=100000)
    data2 = data * 1.1 + 0.5

    c = ChainConsumer().add_chain(data, parameters=["$x$", "$y$", "$z$"]).add_chain(data2)
    c.configure(linestyles=["-", "--"], linewidths=[1.0, 2.0],
                shade=[True, False], shade_alpha=[0.2, 0.0])
    fig = c.plotter.plot()

    fig.set_size_inches(3 + fig.get_size_inches())  # Resize fig for doco. You don't need this.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.616 seconds)


.. _sphx_glr_download_examples_customisations_plot_linestyles.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_linestyles.py <plot_linestyles.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_linestyles.ipynb <plot_linestyles.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
