.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_customisations_plot_preliminary.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_customisations_plot_preliminary.py:


==================
Watermarking Plots
==================

Make it obvious that those results are preliminary!


It's easy to do, just supply a string to the `watermark` option when plotting your contours,
and remember that when using TeX `matplotlib` settings like `weight` don't do anything -
if you want bold text make it TeX bold.

The code for this is based off the preliminize github repo at
https://github.com/cpadavis/preliminize, which will add watermark to arbitrary
figures!


.. code-block:: default


    import numpy as np
    from numpy.random import multivariate_normal
    from chainconsumer import ChainConsumer

    np.random.seed(0)
    data1 = multivariate_normal([3, 5], [[1, 0], [0, 1]], size=1000000)
    data2 = multivariate_normal([5, 3], [[1, 0], [0, 1]], size=10000)


    c = ChainConsumer()
    c.add_chain(data1, parameters=["$x$", "$y$"], name="Good results")
    c.add_chain(data2, name="Unfinished results")
    fig = c.plotter.plot(watermark=r"\textbf{Preliminary}", figsize=2.0)





.. image:: /examples/customisations/images/sphx_glr_plot_preliminary_001.png
    :alt: plot preliminary
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/miniconda/lib/python3.7/site-packages/chainconsumer/plotter.py:328: MatplotlibDeprecationWarning: Additional arguments to TextPath used to be ignored, but will trigger a TypeError in 3.3.
      bb0 = TextPath((0, 0), text, size=50, props=fontdict, usetex=usetex).get_extents()
    /home/travis/miniconda/lib/python3.7/site-packages/chainconsumer/plotter.py:329: MatplotlibDeprecationWarning: Additional arguments to TextPath used to be ignored, but will trigger a TypeError in 3.3.
      bb1 = TextPath((0, 0), text, size=51, props=fontdict, usetex=usetex).get_extents()




You can also control the text options sent to the matplotlib text call.


.. code-block:: default


    c = ChainConsumer()
    c.add_chain(data1, parameters=["$x$", "$y$"], name="Good results")
    c.add_chain(data2, name="Unfinished results")
    kwargs = {"color": "purple", "alpha": 1.0, "family": "sanserif", "usetex": False, "weight": "bold"}
    c.configure(watermark_text_kwargs=kwargs, flip=True)
    fig = c.plotter.plot(watermark="SECRET RESULTS", figsize=2.0)




.. image:: /examples/customisations/images/sphx_glr_plot_preliminary_002.png
    :alt: plot preliminary
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/miniconda/lib/python3.7/site-packages/chainconsumer/plotter.py:328: MatplotlibDeprecationWarning: Additional arguments to TextPath used to be ignored, but will trigger a TypeError in 3.3.
      bb0 = TextPath((0, 0), text, size=50, props=fontdict, usetex=usetex).get_extents()
    /home/travis/miniconda/lib/python3.7/site-packages/chainconsumer/plotter.py:329: MatplotlibDeprecationWarning: Additional arguments to TextPath used to be ignored, but will trigger a TypeError in 3.3.
      bb1 = TextPath((0, 0), text, size=51, props=fontdict, usetex=usetex).get_extents()





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.968 seconds)


.. _sphx_glr_download_examples_customisations_plot_preliminary.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_preliminary.py <plot_preliminary.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_preliminary.ipynb <plot_preliminary.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
