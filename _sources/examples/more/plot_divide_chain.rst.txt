.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_more_plot_divide_chain.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_more_plot_divide_chain.py:


================
Dividing a chain
================

ChainConsumer can split one chain into many!

If you use a sampling algorithm with multiple walkers (which
is fairly common), it can be useful to plot each walker as a separate chain
so that you can verify that your walkers have all converged to the same place.

You can use the `plot_walks` method for this, or the convergence diagnostics,
but the more options the better!

In the below example, I assume the generated data was created using ten walkers.
I introduce some fake shift in the data to badly emulate walker drift.



.. image:: /examples/more/images/sphx_glr_plot_divide_chain_001.png
    :alt: plot divide chain
    :class: sphx-glr-single-img






.. code-block:: default


    import numpy as np
    from numpy.random import multivariate_normal
    from chainconsumer import ChainConsumer


    np.random.seed(0)
    data = multivariate_normal([0.0, 4.0], [[1.0, 0.7], [0.7, 1.5]], size=1000000)
    data[:, 0] += np.linspace(0, 1, data.shape[0])

    c = ChainConsumer().add_chain(data, parameters=["$x$", "$y$"], walkers=5)
    c2 = c.divide_chain()
    fig = c2.plotter.plot()

    fig.set_size_inches(3 + fig.get_size_inches())  # Resize fig for doco. You don't need this.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.817 seconds)


.. _sphx_glr_download_examples_more_plot_divide_chain.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_divide_chain.py <plot_divide_chain.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_divide_chain.ipynb <plot_divide_chain.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
